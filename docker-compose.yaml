
services:
  db:
    image: postgres:15.2
    restart: always
    container_name: syntiIQ
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres} 
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_password} 
      POSTGRES_DB: ${DB_NAME:-your_database} 
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  redis:
    image: redis:7
    restart: always
    container_name: redis_cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"] 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  postgres_data: # Volumen para PostgreSQL
  redis_data: # Volumen para Redis

networks:
  backend: # Red compartida entre servicios
